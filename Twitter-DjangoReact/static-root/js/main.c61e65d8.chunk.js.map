{"version":3,"sources":["logo.svg","lookup/components.js","tweets/buttons.js","tweets/lookup.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","response","status","onerror","e","console","log","send","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","ParentTweet","parent","Tweet","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","window","location","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","Fragment","href","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","username","apiTweetList","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","key","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","app","getElementById","ReactDOM","render","StrictMode","createElement","tweetEl","dataset","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c61e65d8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType =  'json'\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    \n    if (csrftoken) {\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\n    }\n\n    xhr.onload = function () {\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n        console.log(e)\n        callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send(jsonData)\n}\n\n","import React from 'react'\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props \n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status)\n      } \n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}`: actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }\n","import {backLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backLookup('POST', '/tweets/create/', callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {\n        id: tweetId,\n        'action': action\n    }\n    backLookup('POST', '/tweets/action/', callback, data)\n}\n\nexport function apiTweetList(username, callback) {\n    let endpoint = '/tweets/'\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n    backLookup('GET', endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backLookup('GET', `/tweets/${tweetId}/`, callback)\n}","import React, { useState } from 'react'\nimport { ActionBtn } from './buttons'\n\n\nexport function ParentTweet(props) {\n  const { tweet } = props\n  return tweet.parent ? <div className='row'>\n    <div className='col-11 mx-auto p-3 border rounded'>\n      <p className='mb-0 text-muted small'>Retweet</p>\n      <Tweet hideActions className=' ' tweet={tweet.parent}></Tweet>\n    </div></div> : null\n}\n\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions } = props\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  const className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid : -1\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n  const handleLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet)\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet)\n      }\n    }\n  }\n\n  return <div className={className}>\n    <div>\n      <p>{tweet.id} - {tweet.content}</p>\n      <ParentTweet tweet={tweet} />\n    </div>\n  <div className='btn btn-group'>\n    {!(actionTweet && hideActions) && <React.Fragment>\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: \"Likes\" }} />\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }} />\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }} />\n      </React.Fragment>}\n      {isDetail ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}>View</button>}\n    </div>\n  </div>\n}\n\n","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n\n    } else {\n      console.log(response)\n      alert(\"An error occured, please try again.\")\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    apiTweetCreate(newVal, handleBackendUpdate)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} className='form-control' name='tweet' required={true}>\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}\n","import React, { useEffect, useState }  from 'react'\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [tweetsDidSet, setTweetsDidSet] = useState(false) \n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (!tweetsDidSet) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response)\n          setTweetsDidSet(true)\n        } else {\n          alert(\"There was an error.\")\n        }\n      }\n      apiTweetList(props.username, myCallback)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updatedTweetsInit = [...tweetsInit]\n      updatedTweetsInit.unshift(newTweet)\n      setTweetsInit(updatedTweetsInit)\n\n      const updatedFinalTweets = [...tweets]\n      updatedFinalTweets.unshift(tweets)\n      setTweets(updatedFinalTweets)\n    }\n\n    return tweets.map((item, index) => {\n      return <Tweet \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        key={`${index}-{item.id}`}\n        className='my-5 py-5 border bg-white text-dark'/>\n    })\n  \n  }\n  ","import React, {useState, useEffect} from 'react'\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\n\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === 'false' ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n   \n  }\n\n  return <div className={props.className}>\n    {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n    <TweetsList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if(status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet\")\n    }\n  }\n  useEffect(() => {\n    if (!didLookup) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n\n  }, [tweetId, didLookup, setDidLookup])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst app = document.getElementById('root')\nif (app) {\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>, app);\n}\n\nconst e = React.createElement\nconst tweetEl = document.getElementById(\"tweetme-2\")\nif (tweetEl) {\n  ReactDOM.render(e(TweetsComponent, tweetEl.dataset), tweetEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container\n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}