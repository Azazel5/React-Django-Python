{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","tweets/detail.js","tweets/create.js","tweets/list.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","send","apiTweetList","username","nextUrl","undefined","replace","apiTweetFeed","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","nameDisplay","includeFullName","first_name","last_name","Fragment","UserPicture","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","useState","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","alert","onSubmit","newVal","current","value","ref","required","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","useEffect","final","newTweets","concat","results","next","handleDidRetweet","newTweet","updatedTweetsInit","unshift","updatedFinalTweets","map","item","index","key","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","didLookup","setDidLookup","setTweet","handleBackendLookup","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","app","getElementById","ReactDOM","render","StrictMode","createElement","tweetEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.270413a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n\n    const xhr = new XMLHttpRequest()\n    const url = `http://localhost:8000/api${endpoint}`\n    xhr.responseType =  'json'\n    const csrftoken = getCookie('csrftoken');\n    xhr.open(method, url)\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\")\n    \n    if (csrftoken) {\n        xhr.setRequestHeader('X-CSRFToken', csrftoken)\n    }\n\n    xhr.onload = function () {\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail \n            if (detail === 'Authentication credentials were not provided.') {\n                if (window.location.href.indexOf(\"login\") === -1) {\n                window.location.href = \"/login?showLoginRequired=true\"\n                }\n            }\n        }\n        callback(xhr.response, xhr.status)\n    }\n    xhr.onerror = function (e) {\n        console.log(e)\n        callback({\"message\": \"The request was an error\"}, 400)\n    }\n    xhr.send(jsonData)\n}\n\n","import {backLookup} from '../lookup'\n\nexport function apiTweetCreate(newTweet, callback) {\n    backLookup('POST', '/tweets/create/', callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {\n        id: tweetId,\n        'action': action\n    }\n    backLookup('POST', '/tweets/action/', callback, data)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n    let endpoint = '/tweets/'\n    if (username) {\n        endpoint = `/tweets/?username=${username}`\n    }\n\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n\n    backLookup('GET', endpoint, callback)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backLookup('GET', `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = '/tweets/feed/'\n\n    if (nextUrl !== null && nextUrl !== undefined) {\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\n    }\n\n    backLookup('GET', endpoint, callback)\n}","import React from 'react'\nimport {apiTweetAction} from './lookup'\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props \n    const likes = tweet.likes ? tweet.likes : 0\n    const className = props.className ? props.className : 'btn btn-primary btn-small'\n    const actionDisplay = action.display ? action.display : 'Action'\n    const handleActionBackendEvent = (response, status) => {\n      console.log(response, status)\n      if ((status === 200 || status === 201) && didPerformAction) {\n        didPerformAction(response, status)\n      } \n    }\n    const handleClick = (event) => {\n        event.preventDefault()\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n    }\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}`: actionDisplay\n    return <button className={className} onClick={handleClick}>{display}</button>\n  }\n","import React from 'react'\n\n\nexport function UserLink(props) {\n  const {username} = props \n  const handleUserLink = (event) => {\n    window.location.href = `/profile/${username}`\n  }\n\n  return <span className='pointer' onClick={handleUserLink}>\n    {props.children}\n  </span>\n}\n\nexport function UserDisplay(props) {\n  const {user, includeFullName} = props \n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null \n  \n  return <React.Fragment>\n    {nameDisplay}\n    <UserLink username={user.username}>@{user.username}</UserLink>\n  </React.Fragment>\n}\n\nexport function UserPicture(props) {\n  const {user} = props \n  return <UserLink username={user.username}><span className='px-3 py-2 rounded-circle bg-dark text-white'>\n  {user.username[0]}\n</span></UserLink>\n}\n","import React, { useState } from 'react'\nimport { ActionBtn } from './buttons'\nimport { UserDisplay, UserPicture } from '../profiles'\n\n\nexport function ParentTweet(props) {\n  const { tweet } = props\n  return tweet.parent ? <Tweet isRetweet retweeter={props.retweeter} hideActions className=' ' tweet={tweet.parent}></Tweet> : null\n}\n\nexport function Tweet(props) {\n  const { tweet, didRetweet, hideActions, isRetweet, retweeter } = props\n  const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null)\n  let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\n  className = isRetweet === true ? `${className} p-2 border rounded`: className\n  const path = window.location.pathname\n  const match = path.match(/(?<tweetid>\\d+)/)\n  const urlTweetId = match ? match.groups.tweetid : -1\n  const isDetail = `${tweet.id}` === `${urlTweetId}`\n  const handleLink = (event) => {\n    event.preventDefault()\n    window.location.href = `/${tweet.id}`\n  }\n  const handlePerformAction = (newActionTweet, status) => {\n    if (status === 200) {\n      setActionTweet(newActionTweet)\n    } else if (status === 201) {\n      if (didRetweet) {\n        didRetweet(newActionTweet)\n      }\n    }\n  }\n\n  return <div className={className}>\n        {isRetweet && <div className='mb-2'>\n<span className='small text-muted'>Retweet via <UserDisplay  user={retweeter} /></span>\n    </div>}\n    <div className='d-flex'>\n      <div className='mx-1'>\n        <UserPicture user={tweet.user} />\n      </div>\n      <div className='col-11'>\n    <div>\n      <p>\n        <UserDisplay includeFullName user={tweet.user} />\n      </p>\n      <p>{tweet.content}</p>\n      <ParentTweet tweet={tweet} retweeter ={tweet.user} />\n    </div>\n  <div className='btn btn-group px-0'>\n    {!(actionTweet && hideActions) && <React.Fragment>\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"like\", display: \"Likes\" }} />\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"unlike\", display: \"Unlike\" }} />\n      <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction} action={{ type: \"retweet\", display: \"Retweet\" }} />\n      </React.Fragment>}\n      {isDetail ? null : <button className='btn btn-outline-primary btn-small' onClick={handleLink}>View</button>}\n    </div>\n    </div>\n  </div>\n  </div>\n}\n\n","import React from 'react'\nimport { apiTweetCreate } from './lookup'\n\nexport function TweetCreate(props) {\n  const textAreaRef = React.createRef()\n  const {didTweet} = props\n  const handleBackendUpdate = (response, status) => {\n    if (status === 201) {\n      didTweet(response)\n\n    } else {\n      console.log(response)\n      alert(\"An error occured, please try again.\")\n    }\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    const newVal = textAreaRef.current.value\n    apiTweetCreate(newVal, handleBackendUpdate)\n    textAreaRef.current.value = ''\n  }\n\n  return <div className={props.className}>\n    <form onSubmit={handleSubmit}>\n      <textarea ref={textAreaRef} className='form-control' name='tweet' required={true}>\n      </textarea>\n      <button type='submit' className='btn btn-primary my-3'>Tweet</button>\n    </form>\n  </div>\n}\n","import React, { useEffect, useState }  from 'react'\nimport {apiTweetList} from './lookup'\nimport {Tweet} from './detail'\n\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false) \n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (!tweetsDidSet) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response.results)\n          setNextUrl(response.next)\n          setTweetsDidSet(true)\n        } else {\n          alert(\"There was an error.\")\n        }\n      }\n      apiTweetList(props.username, myCallback)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updatedTweetsInit = [...tweetsInit]\n      updatedTweetsInit.unshift(newTweet)\n      setTweetsInit(updatedTweetsInit)\n\n      const updatedFinalTweets = [...tweets]\n      updatedFinalTweets.unshift(tweets)\n      setTweets(updatedFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault() \n      if (nextUrl !== null) {\n          const handleLoadNextResponse = (response, status) => {\n            if (status === 200) {\n              const newTweets = [...tweets].concat(response.results)\n              setNextUrl(response.next)\n              setTweets(newTweets)\n              setTweetsInit(newTweets)\n\n            } else {\n              alert(\"There was an error.\")\n            }\n          }\n          apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => {\n      return <Tweet \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        key={`${index}-{item.id}`}\n        className='my-5 py-5 border bg-white text-dark'/>\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  }\n  ","import React, { useEffect, useState }  from 'react'\nimport {apiTweetFeed} from './lookup'\nimport {Tweet} from './detail'\n\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([])\n    const [tweets, setTweets] = useState([])\n    const [nextUrl, setNextUrl] = useState(null)\n    const [tweetsDidSet, setTweetsDidSet] = useState(false) \n    useEffect(() => {\n      const final = [...props.newTweets].concat(tweetsInit)\n      if (final.length !== tweets.length) {\n        setTweets(final)\n      }\n    }, [props.newTweets, tweets, tweetsInit])\n\n    useEffect(() => {\n      if (!tweetsDidSet) {\n      const myCallback = (response, status) => {\n        if (status === 200) {\n          setTweetsInit(response.results)\n          setNextUrl(response.next)\n          setTweetsDidSet(true)\n        } \n      }\n      apiTweetFeed(myCallback)\n    }\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet])\n    \n    const handleDidRetweet = (newTweet) => {\n      const updatedTweetsInit = [...tweetsInit]\n      updatedTweetsInit.unshift(newTweet)\n      setTweetsInit(updatedTweetsInit)\n\n      const updatedFinalTweets = [...tweets]\n      updatedFinalTweets.unshift(tweets)\n      setTweets(updatedFinalTweets)\n    }\n\n    const handleLoadNext = (event) => {\n      event.preventDefault() \n      if (nextUrl !== null) {\n          const handleLoadNextResponse = (response, status) => {\n            if (status === 200) {\n              const newTweets = [...tweets].concat(response.results)\n              setNextUrl(response.next)\n              setTweets(newTweets)\n              setTweetsInit(newTweets)\n\n            }\n          }\n          apiTweetFeed(handleLoadNextResponse, nextUrl)\n      }\n    }\n\n    return <React.Fragment>{tweets.map((item, index) => {\n      return <Tweet \n        tweet={item} \n        didRetweet={handleDidRetweet}\n        key={`${index}-{item.id}`}\n        className='my-5 py-5 border bg-white text-dark'/>\n    })}\n    {nextUrl !== null && <button onClick={handleLoadNext} className='btn btn-outline-primary'>Load Next</button>}\n    </React.Fragment>\n  }\n  ","import React, {useState, useEffect} from 'react'\nimport {TweetsList} from './list'\nimport {TweetCreate} from './create'\n\nimport {apiTweetDetail} from './lookup'\nimport {Tweet} from './detail'\nimport {FeedList} from './feed'\n\nexport function FeedComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === 'false' ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n   \n  }\n  \n  return <div className={props.className}>\n    {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n    <FeedList newTweets={newTweets} {...props} />\n  </div>\n}\n\n\nexport function TweetsComponent(props) {\n  const [newTweets, setNewTweets] = useState([])\n  const canTweet = props.canTweet === 'false' ? false : true\n  const handleNewTweet = (newTweet) => {\n    let tempNewTweets = [...newTweets]\n    tempNewTweets.unshift(newTweet)\n    setNewTweets(tempNewTweets)\n   \n  }\n\n  return <div className={props.className}>\n    {canTweet && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3'/>}\n    <TweetsList newTweets={newTweets} {...props} />\n  </div>\n}\n\nexport function TweetDetailComponent(props) {\n  const {tweetId} = props\n  const [didLookup, setDidLookup] = useState(false)\n  const [tweet, setTweet] = useState(null)\n\n  const handleBackendLookup = (response, status) => {\n    if(status === 200) {\n      setTweet(response)\n    } else {\n      alert(\"There was an error finding your tweet\")\n    }\n  }\n  useEffect(() => {\n    if (!didLookup) {\n      apiTweetDetail(tweetId, handleBackendLookup)\n      setDidLookup(true)\n    }\n\n  }, [tweetId, didLookup, setDidLookup])\n\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n}\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from './tweets'\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\n\nconst app = document.getElementById('root')\nif (app) {\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>, app);\n}\n\nconst e = React.createElement\nconst tweetEl = document.getElementById(\"tweetme-2\")\nif (tweetEl) {\n  ReactDOM.render(e(TweetsComponent, tweetEl.dataset), tweetEl);\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif (tweetFeedEl) {\n  ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container\n  );\n})\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}