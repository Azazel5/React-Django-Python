.logo {
    height: 3.25rem;
    margin-left: 2rem;
}

.search {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 0 0 40%;

    // the input element doesn't inherit, so set it manually
    &__input {
        font-family: inherit;
        font-size: inherit;
        background-color: var(--color-gray-light-2);
        border: none;
        color: inherit;
        padding: .7rem 2rem;
        border-radius: 100px;
        width: 90%;
        transition: all .2s;
        margin-right: -3.25rem;

        &:focus {
            outline: none;
            width: 100%;
            background-color: var(--color-gray-light-3);     
        }

        &::-webkit-input-placeholder {
            font-weight: 100;
            color: var(--color-gray-light-4);
        }
    }

    &__input:focus + &__button {
        background-color: var(--color-gray-light-3);     
    }

    // setting height-width of svgs is business as usual. setting the color is done 
    // by the fill property
    &__icon {
        height: 2rem;
        width: 2rem;
        fill: var(--color-gray-dark-3);             ;
    }

    &__button {
        border: none;
        background-color: var(--color-gray-light-2);

        &:focus {
            outline: none;
        }

        &:active {
            transform: translateY(2px);
        }
    }
}

.user-nav {
    display: flex;
    align-items: center;
    align-self: stretch;

    & > * {
        display: flex;
        align-items: center;
        padding: 0 2rem;
        cursor: pointer;
        height: 100%;
    }

    & > *:hover {
        background-color: var(--color-gray-light-2);
    }

    &__icon {
        height: 2.25rem;
        width: 2.25rem;
        fill: var(--color-gray-dark-2);
    }

    &__icon-box {
        position: relative;
    }

    &__notification {
        display: flex;
        justify-content: center;
        align-items: center;
        position: absolute;
        top: 1.5rem;
        right: 1.1rem;
        font-size: .8rem;
        height: 1.75rem;
        width: 1.75rem;
        border-radius: 50%;
        background-color: var(--color-primary);
        color: #fff;
    }

    &__user-photo {
        height: 3.75rem;
        border-radius: 50%;
        margin-right: 1rem;
    }
}

.side-nav {
    font-size: 1.4rem;
    list-style: none;
    margin-top: 3.5rem;


    &__item {
        position: relative;

        &:not(:last-child) {
            margin-bottom: .5rem;
        }
    }

    // You can set a transform origin to specify where the transition starts from
    // Apply transitions to multiple properties with different times and delays 
    &__item::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 3px;
        background-color: var(--color-primary);
        transform: scaleY(0); 
        transition: transform .2s,
            width .4s cubic-bezier(1,0,0,1) .2s,
            background-color .1s;
    }

    // You need to add delay to the width transition as it'll occur first before the 
    // scaleY will get a chance. 
    &__item--active::before, 
    &__item:hover::before {
        transform: scaleY(1);
        width: 100%;
    }

    &__item:active::before {
        background-color: var(--color-primary-light);
    }

    &__link:link,
    &__link:visited {
        display: flex;
        align-items: center;
        position: relative;
        color: var(--color-gray-light-1);
        text-decoration: none;
        text-transform: uppercase;
        padding: 1.3rem 3rem;
        z-index: 10;
    }

    // currentColor is the same as the parent element's color (which is the link)
    &__icon {
        width: 1.75rem;
        height: 1.75rem;
        margin-right: 2rem;
        fill: currentColor;
    }
}

.legal {
    font-size: 1.2rem;
    text-align: center;
    padding: 2.5rem;
    color: var(--color-gray-light-4);
}

.gallery {
    display: flex;

    &__photo {
        display: block;
        width: 100%;
    }
}

.overview {
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--color-gray-light-2);

    &__heading {
        font-size: 2.25rem;
        font-weight: 300;
        text-transform: uppercase;
        letter-spacing: 1px;
        padding: 1.5rem 3rem;
    }

    // With SVGs, sometimes there will be a small whitespace around it, even after you align things.
    // Set display:flex; on the SVGs parent container, and the problem will be solved 
    &__stars {
        display: flex;
        margin-right: auto;
    }

    &__icon-star,
    &__icon-location {
        width: 1.75rem;
        height: 1.75rem;
        fill: var(--color-primary);
    }

    &__location {
        display: flex;
        vertical-align: center;
        font-size: 1.2rem;
    }

    &__icon-location {
        margin-right: .5rem;
    }

    &__rating {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: var(--color-primary);
        margin-left: 3rem;
        color: #fff;
        align-self: stretch;
        padding: 0 2.25rem;
    }

    &__rating-average {
        font-size: 2.25rem;
        font-weight: 300;
        margin-bottom: -3px;
    }

    &__rating-count {
        font-size: .8rem;
        text-transform: uppercase;
    }
}

.btn-inline {
    display: inline-block;
    border: none;
    color: var(--color-primary);
    font-size: inherit;
    border-bottom: 1px solid currentColor;
    padding-bottom: 2px;
    background-color: transparent;
    cursor: pointer;
    transition: all .2s;

    &:hover {
        color: var(--color-gray-dark-1);
    }

    // Many possible arguments to the animation keyword, exploring is necessary
    &:focus {
        outline: none;
        animation: pulsate 1s infinite;
    }
}

@keyframes pulsate {
    0% {
        transform: scale(1);
        box-shadow: none;
    }

    50% {
        transform: scale(1.05);
        box-shadow: 0 1rem 4rem rgba($color: black, $alpha: .25);
    }

    100% {
        transform: scale(1);
        box-shadow: none;
    }
}