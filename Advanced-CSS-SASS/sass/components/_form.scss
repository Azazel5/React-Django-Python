.form {
    
    // By default browsers change the font family for inputs, so remember to change it
    // In CSS, we can specify the valid and invalid classes. 
    &__input {
        display: block;
        font-size: 1.5rem;
        font-family: inherit;
        color: inherit;
        padding: 1.5rem 2rem;
        border-radius: 2px;
        background-color: rgba($color-white, .5);
        border: none;
        border-bottom: 3px solid transparent;
        width: 90%;
        transition: all .3s;

        @include respond(tab-port) {
            width: 100%;
        }

        // To mess around with the input placeholder; only works in chrome and safari
        &::-webkit-input-placeholder {
            color: $color-grey-lighter;
        }

        // For accessibility reasons (eg. people using keyboard to navigate), never simply 
        // do outline:none; for focus. Always try to specify the currently active element.
        &:focus {
            outline: none;
            box-shadow: 0 1rem 2rem rgba($color-black, .1);
            border-bottom: 3px solid $color-primary;
        }

        &:focus:invalid {
            border-bottom: 3px solid $color-secondary-dark;
        }
    }

    &__group:not(:last-child) {
        margin-bottom: 2rem;
    }

    &__label {
        display: block;
        font-size: 1.2rem;
        font-weight: 700;
        margin-left: 2rem;
        margin-top: .7rem;
        transition: all .3s;
    }

    &__radio-input {
        display: none ;
    }

    // This cannot be nested inside the &__input. We can use the sibling selector. Here we 
    // want to select the adjacent sibling i.e. One_sibling + second_sibling {}
    &__input:placeholder-shown + &__label {
        opacity: 0;
        visibility: hidden;
        transform: translateY(-4rem);
    }

    &__radio-group {
        width: 49%;
        display: inline-block;

        @include respond(tab-port) {
            width: 100%;
            margin-bottom: 2rem;
        }
    }

    &__radio-label {
        font-size: $default-font-size;
        position: relative;
        cursor: pointer;
        padding-left: 4.5rem;
    }

    &__radio-button {
        display: inline-block;
        position: absolute;
        left: 0;
        top: -.4rem;
        height: 3rem;
        width: 3rem;
        border: 5px solid $color-primary;
        border-radius: 50%;

        &::after {
            height: 1.3rem;
            width: 1.3rem;
            content: "";
            display: block;
            border-radius: 50%;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: $color-primary;
            opacity: 0;
            transition: opacity .2s;
        }
    }

    // Selecting a direct child .div .child if child is a direct child
    // The ~ selector selects the sibling just like + 
    // Here we are trying to access our button's ::after element on radiobutton check
    &__radio-input:checked ~ &__radio-label &__radio-button::after {
        opacity: 1;
    }
}