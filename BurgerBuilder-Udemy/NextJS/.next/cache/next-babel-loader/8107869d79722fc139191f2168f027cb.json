{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/shubmeister/Desktop/ReactUdemy/NextJS/pages/index.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\n/**\n * Just setting up a folder structure creates URLs and pages, and they are all rendered server-side. No need\n * for routing at all. There's also automatic code splitting since this is all rendered server side. \n * You cannot use CSS modules if using NextJs, but you can use styled jsx instead.. \n * This isn't a normal lifecycle hook, as it is static and can be called without the component being \n * instantiated. It executes first on the server. \n */\n\nvar IndexPage = /*#__PURE__*/function (_Component) {\n  _inherits(IndexPage, _Component);\n\n  var _super = _createSuper(IndexPage);\n\n  function IndexPage() {\n    _classCallCheck(this, IndexPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 16\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, \"The main page\"), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }\n      }, \"Go to \", __jsx(Link, {\n        href: \"/auth\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 22\n        }\n      }, __jsx(\"a\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 41\n        }\n      }, \"Auth\"))), __jsx(\"button\", {\n        onClick: function onClick() {\n          return Router.push(\"/auth\");\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, \"Go to Auth\"));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                console.log(context);\n                return _context.abrupt(\"return\", {});\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return IndexPage;\n}(Component);\n\nexport default IndexPage;","map":{"version":3,"sources":["/Users/shubmeister/Desktop/ReactUdemy/NextJS/pages/index.js"],"names":["React","Component","Link","Router","IndexPage","push","context","console","log"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA;;;;;;;;IAOMC,S;;;;;;;;;;;;;6BAMO;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADG,EAEH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAS,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAnB,CAAT,CAFG,EAGH;AAAQ,QAAA,OAAO,EAAE;AAAA,iBAAMD,MAAM,CAACE,IAAP,CAAY,OAAZ,CAAN;AAAA,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHG,CAAP;AAKH;;;;uGAX4BC,O;;;;;AACzBC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;iDACO,E;;;;;;;;;;;;;;;;;;;EAHSL,S;;AAexB,eAAeG,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport Link from 'next/link'\nimport Router from 'next/router'\n\n/**\n * Just setting up a folder structure creates URLs and pages, and they are all rendered server-side. No need\n * for routing at all. There's also automatic code splitting since this is all rendered server side. \n * You cannot use CSS modules if using NextJs, but you can use styled jsx instead.. \n * This isn't a normal lifecycle hook, as it is static and can be called without the component being \n * instantiated. It executes first on the server. \n */\nclass IndexPage extends Component {\n    static async getInitialProps(context) {\n        console.log(context)\n        return {}\n    }\n\n    render() {\n        return <div>\n            <h1>The main page</h1>\n            <p>Go to <Link href=\"/auth\"><a>Auth</a></Link></p>\n            <button onClick={() => Router.push(\"/auth\")}>Go to Auth</button>\n        </div>\n    }\n}\n\nexport default IndexPage"]},"metadata":{},"sourceType":"module"}